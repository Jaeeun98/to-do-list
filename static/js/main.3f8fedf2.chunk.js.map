{"version":3,"sources":["component/addForm.jsx","component/list.jsx","component/navBar.jsx","app.jsx","index.js"],"names":["AddForm","onSubmit","this","props","handleListAdd","type","className","value","Component","List","checkedRef","React","createRef","handleChecked","e","checkedList","target","nextElementSibling","childNodes","style","textDecoration","opacity","backgroundColor","check","map","list","onClick","ref","checkList","handleRemoveList","id","NavBar","PureComponent","App","state","Date","now","setState","preventDefault","removeList","parentNode","innerText","filter","handleReset","count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAeeA,E,4JAVX,WACI,OACI,uBAAMC,SAAUC,KAAKC,MAAMC,cAA3B,UACI,uBAAOC,KAAK,OAAOC,UAAU,cAC7B,uBAAOD,KAAK,SAASE,MAAM,MAAMD,UAAU,wB,GAPrCE,aCgCPC,E,4MA9BXC,WAAaC,IAAMC,Y,EAEnBC,cAAgB,SAACC,GACb,IAAMC,EAAcD,EAAEE,OAAOC,mBAAmBC,WAAW,GAE3DH,EAAYI,MAAMC,eAAiB,eACnCL,EAAYI,MAAME,QAAU,MAC5BP,EAAEE,OAAOG,MAAMG,gBAAkB,W,4CAGrC,WAAU,IAAD,OACL,OACI,6BACKpB,KAAKC,MAAMoB,MAAMC,KAAI,SAAAC,GAAI,OACtB,+BACI,wBAAQnB,UAAU,WAAWoB,QAAS,EAAKb,gBAC3C,sBAAKP,UAAU,OAAf,UACI,sBAAMA,UAAU,WAAWqB,IAAK,EAAKjB,WAArC,SAAkDe,EAAKG,YACvD,wBAAQF,QAAS,EAAKvB,MAAM0B,iBAAkBvB,UAAU,WAAxD,SACI,mBAAGA,UAAU,wBALhBmB,EAAKK,a,GAfftB,aCUJuB,E,4JAVX,WACI,OACI,mCACI,sBAAMzB,UAAU,QAAhB,sBACA,qBAAKA,UAAU,aAAf,gG,GALK0B,iBC6DNC,E,4MAtDbC,MAAQ,CACNX,MAAQ,CACJ,CAAEO,GAAK,EAAGF,UAAY,kCACtB,CAAEE,GAAK,EAAGF,UAAY,iDACtB,CAAEE,GAAK,EAAGF,UAAY,iD,EAI5BxB,cAAgB,SAAAU,GACd,IAAMW,EAAOX,EAAEE,OAAO,GAAGT,MACzB,GAAW,IAARkB,EAAH,CAIE,IAAMF,EAAK,sBAAQ,EAAKW,MAAMX,OAAnB,CAA0B,CAAEO,GAAKK,KAAKC,MAAOR,UAAYH,KAEpE,EAAKY,SAAS,CAACd,UACfT,EAAEE,OAAO,GAAGT,MAAQ,GACpBO,EAAEwB,sBAPFxB,EAAEwB,kB,EAWNT,iBAAmB,SAACf,GAClB,IAAMyB,EAAazB,EAAEE,OAAOwB,WAAWA,WAAWA,WAAWC,UACvDlB,EAAQ,EAAKW,MAAMX,MAAMmB,QAAO,SAAAjB,GAAI,OAAIA,EAAKG,YAAcW,KAEjE,EAAKF,SAAS,CAACd,W,EAGjBoB,YAAc,WAGZ,EAAKN,SAAS,CAACd,MAFD,M,4CAKhB,WACE,OACE,sBAAKjB,UAAU,OAAf,UACE,cAAC,EAAD,CAAQsC,MAAO1C,KAAKgC,MAAMU,QAC1B,cAAC,EAAD,CACExC,cAAeF,KAAKE,gBAEtB,kCACE,cAAC,EAAD,CACEmB,MAAOrB,KAAKgC,MAAMX,MAClBM,iBAAkB3B,KAAK2B,qBAG3B,wBAAQvB,UAAU,kBAAkBoB,QAASxB,KAAKyC,YAAlD,8B,GAlDUnC,a,MCDlBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f8fedf2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddForm extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.handleListAdd}>\r\n                <input type=\"text\" className=\"inputText\" />\r\n                <input type=\"submit\" value=\"Add\" className=\"inputBtn btn\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddForm;","import React, { Component } from 'react';\r\n\r\n\r\nclass List extends Component {\r\n    checkedRef = React.createRef();\r\n\r\n    handleChecked = (e) => {\r\n        const checkedList = e.target.nextElementSibling.childNodes[0];\r\n\r\n        checkedList.style.textDecoration = 'line-through';\r\n        checkedList.style.opacity = '0.5';\r\n        e.target.style.backgroundColor = '#C7A4C6';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.props.check.map(list => \r\n                    <li key={list.id}>\r\n                        <button className=\"checkBox\" onClick={this.handleChecked}></button>\r\n                        <div className=\"text\">\r\n                            <span className=\"listText\" ref={this.checkedRef}>{list.checkList}</span>\r\n                            <button onClick={this.props.handleRemoveList} className=\"trashBtn\">\r\n                                <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React, { PureComponent } from 'react';\r\n\r\nclass NavBar extends PureComponent {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <span className=\"title\">ToDoList</span>\r\n                <div className=\"smallTitle\">알찬 하루를 위한, 나만의 Check List</div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\nimport './app.css';\nimport AddForm from './component/addForm';\nimport List from './component/list';\nimport NavBar from './component/navBar';\n\n\nclass App extends Component {\n\n  state = {\n    check : [\n        { id : 1, checkList : 'react 공부하기' },\n        { id : 2, checkList : '30분동안 운동하기'},\n        { id : 3, checkList : '이력서 작성하기'}\n    ],\n  }\n\n  handleListAdd = e => {\n    const list = e.target[0].value;\n    if(list == ''){\n      e.preventDefault();\n      return;\n    } else {\n      const check = [ ...this.state.check, { id : Date.now(), checkList : list } ]\n    \n      this.setState({check});\n      e.target[0].value = '';\n      e.preventDefault();\n    } \n  }\n\n  handleRemoveList = (e) => {\n    const removeList = e.target.parentNode.parentNode.parentNode.innerText;\n    const check = this.state.check.filter(list => list.checkList !== removeList)\n\n    this.setState({check});\n  }\n\n  handleReset = () => {\n    const check = [];\n\n    this.setState({check});\n  }\n\n  render() {\n    return (\n      <div className=\"wrap\">\n        <NavBar count={this.state.count} />\n        <AddForm \n          handleListAdd={this.handleListAdd}\n        />\n        <section>  \n          <List \n            check={this.state.check} \n            handleRemoveList={this.handleRemoveList}\n          />\n        </section>\n        <button className=\"allResetBtn btn\" onClick={this.handleReset}>All Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}